{"version":3,"sources":["components/Alert.js","components/NavBar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","style","height","alert","className","type","role","word","Lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","NavBar","mode","href","title","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","heading","value","onChange","event","target","rows","disabled","length","newText","showAlert","split","filter","item","defaultProps","App","setMode","setAlert","message","setTimeout","document","body","backgroundColor","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.860a92b2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize =(word)=>{\r\n        const Lower = word.toLowerCase();\r\n        return Lower.charAt(0).toUpperCase() + Lower.slice(1)\r\n    }\r\n    return (\r\n        <div style={{height: '50px'}}>\r\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function NavBar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"https://facebook.com\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n      </ul>\r\n        <div className=\"form-check form-switch\">\r\n          <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode}/>\r\n          <label className=\"form-check-label text-dark\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n        </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    )\r\n}\r\nNavBar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\nNavBar.defaultProps ={\r\n    title: 'ReactJS'\r\n}","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    setText(\"You Have Cliked handleUpClick\");\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted To Uppercase\", \"success\")\r\n  };\r\n  const handleLowClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted To Lowercase\", \"success\")\r\n  }\r\n  const handleClearClick = () => {\r\n    let newText = ''\r\n    setText(newText);\r\n    props.showAlert(\"Cleared Text\", \"danger\")\r\n  }\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n  const [text, setText] = useState(\"\");\r\n  return (\r\n    <>\r\n    <div className=\"container my-4\">\r\n        <h1>{props.heading} </h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control my-4\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            id=\"exampleFormControlTextarea1\"\r\n            rows=\"3\"\r\n          ></textarea>\r\n        </div>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleUpClick}>\r\n          Convert To Uppercase\r\n        </button>\r\n        <button disabled={text.length===0} className=\"btn btn-warning mx-2 my-1\" onClick={handleLowClick}>Convert To Lowercase</button>\r\n        <button disabled={text.length===0} className=\"btn btn-danger mx-2 my-1\" onClick={handleClearClick}>Clear</button>\r\n    </div>\r\n    <div className=\"container my-4\">\r\n      <h1>Text Summary</h1>\r\n      <p><b>{text.split(/\\s+/).filter((item)=>{return item.length!==0}).length}</b> words and <b>{text.length}</b> characters</p>\r\n      <p><b>{0.008*text.split(\" \").filter((item)=>{return item.length!==0}).length}</b> Minutes To Read</p>\r\n      <h3>Preview</h3>\r\n      <p>{text.length>0?text:\"Nothing To Preview\"}</p>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","// import \"./App.css\";\n\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\nimport NavBar from \"./components/NavBar\";\nimport TextForm from \"./components/TextForm\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\")\n  const toggleMode = () => {\n    if(mode === \"light\"){\n      setMode(\"dark\");\n      showAlert(\"Dark Mode Has Been Enabled\", \"success\")\n      document.body.style.backgroundColor = \"#343a40\";\n      document.body.style.color = \"white\";\n      // document.title = \"TextUtils - Dark Mode\"\n    }\n    else{\n      setMode(\"light\");\n      showAlert(\"Light Mode Has Been Enabled\", \"success\")\n      document.body.style.backgroundColor = \"white\";\n      document.body.style.color = \"black\";\n      // document.title = \"TexUtils - Light Mode\"\n    }\n  }\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type,\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  }\n  return (\n    <>\n    {/* <Router>\n      <div> */}\n      <NavBar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n      {/* <NavBar /> */}\n      <Alert alert={alert}/>\n      <TextForm showAlert={showAlert} heading=\"Enter The Text To Analyse Below\"/> \n      {/* <Switch>\n          <Route  exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\">\n          </Route>\n        </Switch>\n      </div>\n    </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}